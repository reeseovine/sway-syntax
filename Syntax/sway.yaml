name: SwayWM Config
author: reeseovine
scopeName: source.sway_config
fileTypes: [sway/*]
uuid: 5d7cdb1e-20f4-4dcc-9684-b97ccdbdf21f

patterns:
- name: criteria
  match: \[(.*)\]
  captures:
    '1': {name: constant.string.sway_config}

# Chapter 4, Configuring sway
- name: comment
  match: (\#)(.*)
  captures:
    '1': {name: comment.line.number-sign.sway_config}
    '2': {name: comment.line.sway_config}

- name: font_pango
  match: (font\ pango\:)\s*([- ,\w]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

- name: font
  match: (font)\s*([-\w]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# fullscreen
- name: fullscreen
  match: (fullscreen)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.string.sway_config}

# floating_modifier <Modifiers>
- name: floating_modifier
  match: (floating_modifier)\s*(\$?\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: meta.scope.variable.other.sway_config}

# floating_minimum_size <Modifiers>
- name: floating_minimum_size
  match: (floating_minimum_size)\s*(-?\d*)\s*(x)\s*(-?\d*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.numeric.sway_config}
    '3': {name: keyword.control.sway_config}
    '4': {name: constant.numeric.sway_config}

# floating_maximum_size <Modifiers>
- name: floating_maximum_size
  match: (floating_maximum_size)\s*(-?\d*)\s*(x)\s*(-?\d*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.numeric.sway_config}
    '3': {name: keyword.control.sway_config}
    '4': {name: constant.numeric.sway_config}

# default_orientation <Modifiers>
- name: default_orientation
  match: (default_orientation)\s*(vertical|horizontal|v|h|auto|a)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# workspace_layout <Modifiers>
- name: workspace_layout
  match: (workspace_layout)\s*(default|stacking|tabbed|d|s|t)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# new_(window|float) <Modifiers>
- name: new_window_or_float
  match: (new_(?:window|float))\s*(normal|none|(?:\d*pixel\s\d*))
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

#hide_edge_borders <vertical|horizontal|v|h>
- name: hide_edge_borders
  match: (hide_edge_borders)\s*(vertical|horizontal|none|both|v|h|n|b)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

#for_window <criteria> command
- name: for_window
  match: (for_window)\s*\[(\w*)=([\"\w\s\:\~\/\$]*\])\s*
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.string.sway_config}

# set $mod Mod4
- name: set1
  match: (set)\s*(\$\w*)\s*(\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: constant.language.sway_config}

# set $mod #012345
- name: set2
  match: (set)\s*(\$\w*)\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: constant.other.sway_config}


#assign <criteria> command
- name: assign
  match: (assign)\s*\[(.*)]\s*(â†’)?\s*([\w\d]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.string.sway_config}
    '3': {name: keyword.operator.sway_config}
    '4': {name: constant.language.sway_config}

# exec_always [--no-startup-id] command
- name: exec_always
  match: (exec_always)\s*(\-\-no-startup-id)?\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.string.sway_config}

# exec [--no-startup-id] command
- name: exec
  match: (exec)\s*(\-\-no-startup-id)?\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.string.sway_config}

# client.focused <color> <color> <color> <color>
- name: client_focused1
  match: (client\.focused)\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.other.sway_config}
    '3': {name: constant.other.sway_config}
    '4': {name: constant.other.sway_config}
    '5': {name: constant.other.sway_config}

- name: client_focused2
  match: (client\.focused)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}



# client.focused_inactive <color> <color> <color> <color>
- name: client_focused_inactive1
  match: (client\.focused_inactive)\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.other.sway_config}
    '3': {name: constant.other.sway_config}
    '4': {name: constant.other.sway_config}
    '5': {name: constant.other.sway_config}

- name: client_focused_inactive2
  match: (client\.focused_inactive)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}



# client.unfocused <color> <color> <color> <color>
- name: client_unfocused1
  match: (client\.unfocused)\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.other.sway_config}
    '3': {name: constant.other.sway_config}
    '4': {name: constant.other.sway_config}
    '5': {name: constant.other.sway_config}

- name: client_unfocused2
  match: (client\.unfocused)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}


# client.urgent <color> <color> <color> <color>
- name: client_urgent1
  match: (client\.urgent)\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.other.sway_config}
    '3': {name: constant.other.sway_config}
    '4': {name: constant.other.sway_config}
    '5': {name: constant.other.sway_config}

- name: client_urgent2
  match: (client\.urgent)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}


# ipc-socket <path>
- name: ipc_socket
  match: (ipc-socket)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.string.sway_config}

# focus_follows_mouse yes|no
- name: focus_follows_mouse
  match: (focus_follows_mouse)\s*(yes|no|y|n)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# popup_during_fullscreen
- name: popup_during_fullscreen
  match: (popup_during_fullscreen)\s*(smart|ignore|leave_fullscreen)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# force_focus_wrapping yes|no
- name: force_focus_wrapping
  match: (force_focus_wrapping)\s*(yes|no|y|n)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# force_xinerama <yes|no>
- name: force_xinerama
  match: (force_xinerama)\s*(no|yes)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# force_xinerama <yes|no>
- name: force_xinerama
  match: (force_xinerama)\s*(yes|no|y|n)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# workspace_auto_back_and_forth <yes|no>
- name: workspace_auto_back_and_forth
  match: (workspace_auto_back_and_forth)\s*(yes|no|y|n)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# force_display_urgency_hint <timeout> ms
- name: force_display_urgency_hint
  match: (force_display_urgency_hint)\s*(\d*)\s*ms
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.numeric.sway_config}


# Chapter 5, Configuring i3bar

# bar {
  # i3bar commands
# }
- name: bar
  match: (?:^ *|\G *)(bar)
  captures:
    '1': {name: keyword.control.sway_config}

# i3bar_command i3status --config ~/.i3/i3status.conf
- name: i3bar_command
  match: (i3bar_command)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# status_command i3status --config ~/.i3/i3status.conf
- name: status_command
  match: (status_command)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# modifier <Modifier>
- name: modifier
  match: (modifier)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# hidden_state <show|hide>
- name: hidden_state
  match: (hidden_state)\s*(show|hide)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# mode <dock|hide|invisible>
- name: mode
  match: (mode)\s*(dock|hide|invisible)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# bar_id <bar_id>
- name: id
  match: (id)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# position <bottom|top>
- name: position
  match: (position)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# output <output>
- name: output
  match: (output)\s*(\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# tray_output primary
- name: tray_output
  match: (tray_output)\s*(\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# workspace_buttons <yes|no>
- name: workspace_buttons
  match: (workspace_buttons)\s*(yes|no|y|n)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# colors {
  # color commands
# }
- name: colors
  match: (colors)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: meta.scope.block.sway_config}

# background <color>
- name: background
  match: (background)\s*([#$\w]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# statusline <color>
- name: statusline1
  match: (statusline)\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

- name: statusline2
  match: (statusline)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}


# separator <color>
- name: separator
  match: (separator)\s*([#$\w]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# focused_workspace <color> <color> <color>
- name: focused_workspace1
  match: (focused_workspace)\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}
    '4': {name: constant.language.sway_config}
    '5': {name: constant.language.sway_config}

- name: focused_workspace2
  match: (focused_workspace)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}


# active_workspace <color> <color> <color>
- name: active_workspace1
  match: (active_workspace)\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}
    '4': {name: constant.language.sway_config}
    '5': {name: constant.language.sway_config}

- name: active_workspace2
  match: (active_workspace)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}


# inactive_workspace <color> <color> <color>
- name: inactive_workspace1
  match: (inactive_workspace)\s*([#\$\w]*)\s*([#\$\w]*)\s*([#\$\w]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}
    '4': {name: constant.language.sway_config}
    '5': {name: constant.language.sway_config}

- name: inactive_workspace2
  match: (inactive_workspace)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}


# urgent_workspace <color> <color> <color>
- name: urgent_workspace1
  match: (urgent_workspace)\s*(#\w{6})\s*(#\w{6})\s*(#\w{6})
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}
    '4': {name: constant.language.sway_config}
    '5': {name: constant.language.sway_config}

- name: urgent_workspace2
  match: (urgent_workspace)\s*(\$\w*)\s*(\$\w*)\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: variable.other.sway_config}
    '3': {name: variable.other.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: variable.other.sway_config}

# Chapter 6, List of commands

- name: bindcode
  match: (bindcode)\s*(--release)?\s*(\d*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.numeric.sway_config}

- name: bindsym
  match: (bindsym)\s*(--release)?\s*([$\w\+]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: meta.scope.variable.other.sway_config}

# split <vertical|horizontal|v|h>
- name: split
  match: (split)\s*(vertical|horizontal|v|h)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# layout <default|tabbed|stacking|splitv|splith>
- name: layout
  match: (layout)\s*(default|tabbed|stacking|split v|split h)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# layout toggle [split|all]
- name: layout_toggle
  match: (layout toggle)\s*(split|all)?
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# floating toggle
- name: floating_toggle
  match: (floating toggle)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# focus <left|right|down|up>
# focus <parent|child|floating|tiling|mode_toggle>
- name: focus
  match: (focus)\s*(left|right|down|up|l|r|d|u|parent|child|floating|tiling|mode_toggle)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# focus output <<left|right|down|up>|output>
- name: focus_output
  match: (focus output)\s*(left|right|down|up|l|r|d|u|(?:[-\w]*))
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# move <left|right|down|up> [<px> px]
- name: move
  match: (move)\s*(left|right|down|up|l|r|d|u)(?:\s*(-?\d*)\s*(px)\s*(?:(-?\d*)\s*(px))?)?
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.numeric.sway_config}
    '4': {name: constant.language.sway_config}
    '5': {name: constant.numeric.sway_config}
    '6': {name: constant.language.sway_config}

# move [absolute] position [[<px> px] [<px> px]|center]
- name: move_abs
  match: (move)\s*(absolute)\s*(position)\s*(?:(\d*)\s*(px))?(?:\s*(\d*)\s*(px))?(?:\s*(center)|\s*(?:(\d*) (px))\s*(?:(\d*)\s*(px)))?
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}
    '4': {name: constant.numeric.sway_config}
    '5': {name: constant.language.sway_config}
    '6': {name: constant.numeric.sway_config}
    '7': {name: constant.language.sway_config}
    '8': {name: constant.language.sway_config}
    '9': {name: constant.numeric.sway_config}
    '10': {name: constant.language.sway_config}
    '11': {name: constant.numeric.sway_config}
    '12': {name: constant.language.sway_config}

# workspace <next|prev|next_on_output|prev_on_output>
# workspace back_and_forth
# workspace <name>
# workspace number <name>
- name: workspace
  match: (workspace)\s*(next|prev|next_on_output|prev_on_output|back_and_forth|(?:\w)*|(?:\d*\s*\w*))
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}


# rename workspace <old_name> to <new_name>
# rename workspace to <new_name>
- name: rename_workspace
  match: (rename workspace)\s*([:\s\w]*)\s*(to)\s*([:\s\w]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: keyword.control.sway_config}
    '4': {name: constant.language.sway_config}
    '5': {name: constant.language.sway_config}

# NOTE: move__container_or_workspace needs to be defined before move_workspace.
# It needs to be defined first, so that Sublime match 'move workspace to output'
# correctly.  If its defined second, the 'output' won't be highlighted currently
# move container to output <<left|right|down|up>|<output>>
# move workspace to output <<left|right|down|up>|<output>>
- name: move__container_or_workspace
  match: (move)\s*(workspace|container)\s*(to)\s*(output)\s*(left|right|down|up|[\w]*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: keyword.control.sway_config}
    '3': {name: keyword.control.sway_config}
    '4': {name: keyword.control.sway_config}
    '5': {name: constant.language.sway_config}

# move workspace <next|prev|next_on_output|prev_on_output>
# move workspace back_and_forth
# move workspace <name>
# move workspace number <name>
- name: move_workspace
  match: (move)\s*(workspace)\s*(next|prev|next_on_output|prev_on_output|back_and_forth|(?:\w)*|(?:\d*\s*\w*))(\$\w*){0,1}
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: keyword.control.sway_config}
    '3': {name: constant.language.sway_config}
    '4': {name: variable.other.sway_config}

# move [window|container] [to] workspace <name>
- name: move__window_or_container1
  match: (move)\s*(window|container)\s*(to)?\s*(workspace)?\s*(\$\w*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: keyword.control.sway_config}
    '3': {name: keyword.control.sway_config}
    '4': {name: keyword.control.sway_config}
    '5': {name: variable.other.sway_config}

# move [window|container] [to] workspace number <name>
- name: move__window_or_container2
  match: (move)\s*(window|container)\s*(to)?\s*(workspace)?\s*(\d*)\s*(\$?\w*)?
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: keyword.control.sway_config}
    '3': {name: keyword.control.sway_config}
    '4': {name: variable.other.sway_config}
    '5': {name: constant.numeric.sway_config}
    '6': {name: variable.other.sway_config}

# move [window|container] [to] workspace <prev|next|current>
- name: move__window_or_container3
  match: (move)\s*(window|container)\s*(to)?\s*(workspace)\s*(prev|next|current)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: keyword.control.sway_config}
    '3': {name: keyword.control.sway_config}
    '4': {name: constant.language.sway_config}


# resize_mode
- name: resize_mode
  match: (mode)\s*\"(resize)\"\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.stirng.sway_config}

# resize <grow|shrink> <direction> [<px> px [or <ppt> ppt]]
- name: resize
  match: (resize)\s*(grow|shrink)\s*(width|height)\s*(\d*)\s*(px)\s*(or)\s*(\d*)\s*(ppt)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}
    '4': {name: constant.numeric.sway_config}
    '5': {name: constant.language.sway_config}
    '6': {name: constant.language.sway_config}
    '7': {name: constant.numeric.sway_config}
    '8': {name: constant.language.sway_config}

# resize_mode_default
- name: resize_mode_default
  match: (mode)\s*\"(default)\"
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.stirng.sway_config}

- name: focus
  match: (focus)
  captures:
    '1': {name: keyword.control.sway_config}

- name: mark_identifier
  match: (unmark|mark)\s*(.*)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# border
- name: border
  match: (border)\s*(normal|none|(?:(\d*)\s*pixel))
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}

# shmlog <size in bytes>
# shmlog <on|off|toggle>
- name: shmlog
  match: (shmlog)\s*(?:(on|off|toggle)|(\d*))
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.numeric.sway_config}

# debuglog <on|off|toggle>
- name: shmlog
  match: (debuglog)\s*(on|off|toggle)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.numeric.sway_config}

# reload
- name: reload
  match: (reload)
  captures:
    '1': {name: keyword.control.sway_config}

# restart
- name: restart
  match: (restart)
  captures:
    '1': {name: keyword.control.sway_config}

# exit
- name: exit
  match: (exit)
  captures:
    '1': {name: keyword.control.sway_config}

# move scratchpad
- name: move_scratchpad
  match: (move)\s*(scratchpad)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: keyword.control.sway_config}

# scratchpad show
- name: scratchpad_show
  match: (scratchpad)\s*(show)
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: keyword.control.sway_config}

# bar_hidden_state <show|hide|s|h>
- name: bar_hidden_state
  match: (bar hidden_state)\s*(show|hide|toggle)\s*(.*)?
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}

# bar mode dock|hide|invisible|toggle [bar_id]
- name: bar_mode
  match: (mode)\s*(dock|hide|invisible|toggle)\s*(.*)?
  captures:
    '1': {name: keyword.control.sway_config}
    '2': {name: constant.language.sway_config}
    '3': {name: constant.language.sway_config}
